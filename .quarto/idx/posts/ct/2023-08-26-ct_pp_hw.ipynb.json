{"title":"**[Coding Test]**Python Programming HW review","markdown":{"yaml":{"title":"**[Coding Test]**Python Programming HW review","author":"SEOYEON CHOI","date":"2023-08-26"},"headingText":"1.","containsRefs":false,"markdown":"\n\n\nHW: 0315\n\n[02wk-1: 파이썬의 자료형 (2)](https://guebin.github.io/PP2023/posts/01_PythonBasic/2023-03-13-2wk-1.html#%EA%B0%95%EC%9D%98%EC%98%81%EC%83%81)\n\n아래와 같은 문자열이 있다고 하자.\n\n`1`. 적당한 인덱싱을 통하여 출력결과가 아래와 같도록 하라.\n\nhint: University는 10글자이다.\n\n`2`. 출력결과가 아래와 같도록 하는 코드를 작성하라. (lower 함수를 이용할 것)\n\n`3`. 아래의 코드를 관찰하고 isupper()의 기능이 무엇인지 스스로 정리해보라.\n\n대문자인가 확인하는 코드!\n\n소문자인거 확인하는 코드!\n\n`4`. 다음중 실행 불가능한 코드를 모두 골라라.\n\n(a) 'a'*2 \n\n(b) 'a'*'2'\n\n(c) 'a'+2 \n\n(d) 'a'+'2'\n\n# 2.\n\nHW 0315\n\n[02wk-2: 파이썬의 자료형 (3)](https://guebin.github.io/PP2023/posts/01_PythonBasic/2023-03-15-2wk-2.html)\n\n`1`. 길이가 0인 리스트를 만들어라. (비어있는 리스트를 만들어라)\n\n(풀이1)\n\n(풀이2)\n\n`2`. 다음의 실행값 중 가장 큰 숫자가 나오는 보기를 골라라. (에러가 나는 코드는 정답에서 제외함)\n\n`3`. 아래의 예제를 관찰하라.\n\n이 예제를 바탕으로 문자열에 포함된 .format()함수의 기능을 유추하라. 그리고 아래의 결과를 확인하라.\n\n$\\to$ `.format`의 기능은 `{}`에 문자를 순서대로 넣어주는 역할.\n\n`4`. 아래의 예제를 관찰하라.\n\n이 예제를 바탕으로 문자열의 .replace() 기능을 유추하라.\n\n$\\to$ `.replace`의 기능은 'g'를 'u'로 바꿔준다.\n\n`5`. 리스트자료형의 +와 * 연산을 이용하여 아래와 같은 list를 생성하라.\n\nhint: 아래의 코드를 관찰해보세요\n\n`6`. 넘파이를 이용하여 아래와 같은 결과가 나오도록 코드가 작성하라.\n\n$$\\begin{bmatrix}\n1 \\\\\n2 \n\\end{bmatrix} + \\begin{bmatrix}\n11 \\\\\n22 \n\\end{bmatrix} = \n\\begin{bmatrix}\n12 \\\\\n24\n\\end{bmatrix}$$\n\n7. 아래와 같은 벡터가 있다고 하자.\n\n$$\\boldsymbol{a}=\n\\begin{bmatrix}\n12 \\\\\n24\n\\end{bmatrix}$$\n\n넘파이를 이용하여 아래의 결과가 나오게 하는 코드를 작성하라.\n\n$$2\\boldsymbol{a}=\n\\begin{bmatrix}\n24 \\\\\n48\n\\end{bmatrix}$$ \n\n# 3.\n\nHW 0320\n\n[03wk-1: 파이썬의 자료형 (4)](https://guebin.github.io/PP2023/posts/01_PythonBasic/2023-03-20-3wk-1.html)\n\n`1`. 아래의 코드를 관찰하고, sum()의 기능을 유추하라.\n\n$\\to$ 원소의 합\n\n$\\to$ True는 1로, False는 0으로 인식\n\n`2`. 다음과 같은 리스트를 고려하자.\n\n이를 수식으로 표현하면 아래와 같다.\n\n${\\bf x} = [x_1,\\dots,x_{13}]=[80,60,80,90,55,85,95,100,35,70,75,65,95]$\n\n리스트의 원소중 \"$x_i>80$\" 의 조건을 만족하는 원소는 모두 몇개인가? \n\nhint: 리스트컴프리헨션과 `sum()`함수를 이용할 것\n\nmy answer\n\n`3`. 다음과 같은 리스트를 고려하자.\n\n이 리스트에서 ‘A’ 혹은 ’B’의 숫자는 모두 몇개인가?\n\nhint: 아래를 관찰\n\nmy answer\n\n`4`. 아래와 같은 리스트가 있다고 하자.\n\n${\\bf x} = [1,2,1,5,6,2,4,7]$\n\n${\\bf y} = [3,2,4,1,2,5,6,7]$\n\n이러한 벡터를 파이썬에서 표현하기 위해서 아래와 같은 리스트를 만들었다고 하자.\n\n리스트컴프리헨션을 이용하여 \n\n$${\\bf z}=[x_1^2+y_1^2, \\dots, x_{8}^2+y_{8}^2]=[x_i^2+y_i^2: \\text{for $i = 1,2,3,\\dots,8$}]$$ \n\n와 같은 리스트를 생성하라. \n\nmy answer\n\n`5`. 아래와 같은 문자열이 있다고 하자.\n\n이 문자열에서 대문자의 수를 count하라. (2022년 파이썬입문 중간고사 1-(5) 참고)\n\nerror on my answer\n\n<font color=green>이렇게 비교하면 대문자인 것은 세겠지만, 기호가 같은 것도 세기 때문에 over해서 sum하게 된다.</font>\n\n`6`. 리스트컴프리헨션을 이용하여 아래와 같은 리스트를 생성하라. (2022년 파이썬입문 중간고사 1-(7) 참고)\n\n```python\n['a',\n 'aa',\n 'aaa',\n 'aaaa',\n 'aaaaa',\n 'aaaaaa',\n 'aaaaaaa',\n 'aaaaaaaa',\n 'aaaaaaaaa',\n 'aaaaaaaaaa'] <- a가 10개있음\n```\n\nmy answer\n\n`7`. 아래와 같은 list가 있다고 하자.\n\ntest_lst와 리스트컴프리헨션을 이용하여 아래를 출력하는 코드를 구현하라. (2022년 파이썬입문 중간고사 1-(9) 참고)\n\nmy answer\n\n`8`. 아래와 같은 list를 생성하라.\n\n```python\n[1,\n 2,2,\n 3,3,3,\n 4,4,4,4,\n 5,5,5,5,5,\n ...\n 9,9,9,9,9,9,9,9,9] <- 9가 9개 있음 \n```\n\n(풀이1) – 의도한 풀이\n\n(풀이2) – 이걸 의도한건 아니었음…\n\nerror on my answer\n\nright answer\n\n`9`. 아래와 같은 리스트를 관찰하라.\n\n이러한 리스트를 아래와 같은 리스트로 변환하는 코드를 작성하라.\n\nhint: string의 .replace()기능과 리스트 컴프리헨션의 응용\n\nmy answer\n\n`10`. 아래와 같은 문자열을 고려하라.\n\n띄어쓰기를 제거하는 코드를 구현하라. 즉 출력결과가 아래와 같도록 만드는 코드를 구현하라.\n\nhint: 아래코드 관찰\n\nmy answer\n\n`11`. 아래의 코드를 관찰하라.\n\n'dd'에 있는 내용을 이용하여 join의 원소들을 합쳐라.\n\n`12`. 아래와 같이 하나의 특수문자로 이루어진 리스트를 고려하자.\n\n이를 이용하여 아래와 같은 결과를 출력하라.\n\nhint: 11번 문제의 코드를 응용할 것\n\nmy answer\n\n# 4.\n\nHW: 03-22 (2)\n\n[03wk-2: 파이썬의 자료형 (5)](03wk-2: 파이썬의 자료형 (5))\n\n`1`. 길이가 1인 튜플을 만들어 자신의 학번을 저장하라. 길이가 1인 튜플을 만들어 자신의 영문이름을 저장하라. 두 튜플을 + 연산자로 합쳐아래와 같은 출력결과를 얻어라. 최종 결과는 예를들면 아래와 같아야 한다.\n\nmy answer\n\n`2-5`. 아래는 파이썬프로그래밍 수강생들의 학번, 이름, 출석점수, 과제점수, 중간고사점수, 기말고사점수를 저장한 중첩리스트이다.\n\n`2`. 파이썬프로그래밍 수강생의 수는 모두 몇명인가?\n\n`3`. 전북대학교 지침에 따라 출석점수가 7보다 작은 학생은 (즉 `출석점수 < 7` 일 경우) F학점을 부여하게 되어있다. 이 기준에 따르면 F를 받는 학생은 모두 몇명인가?\n\nmy answer\n\n풀이 뜯어보기\n\n순서대로 학번, 이름, 출석점수, 나머지~\n\n---\n\n`-`\n\n`-`\n\n---\n\n`4`. 파이썬프로그래밍 수업의 경우 출석+레포트 < 21 일 경우 F학점을 부여한다고 한다. 이 기준에 따르면 F를 받는 학생은 모두 몇명인가?\n\nmy answer\n\n`5`. 리스트의 정렬순서를 [학번, 이름, …, 기말고사점수] 가 아니라 [이름, 학번, … , 기말고사점수] 와 같이 되도록 변경하는 코드를 작성하라.\n\nmy answer\n\n`6`. 아래의 코드를 관찰하라.\n\n이 코드를 바탕으로 split의 기능을 유추하라.\n\n$\\to$ `split`은 호출한 문자 기준으로 문자 나누는 역할\n\n`7`. 6의 실행결과를 되돌리는 코드를 작성하라. 즉\n\n와 같은 리스트를 아래의 string으로 바꾸는 코드를 작성하라.\n\nhint: join을 이용할 것\n\nmy answer\n\n다음은 인터넷에서 긁어온 어떠한 텍스트이다.\n\n`8`. text는 총 몇개의 문장으로 이루어져 있는가?\n\nhint: 이 텍스트의 문장은 모두 .로 끝난다.\n\nerror on my answer\n\n$\\to$ . 띄어쓰기를 생각 못 함\n\n`9`. 각 문장은 몇개의 단어로 이루어져 있는가?\n\nhint: 각 단어는 공백으로 구분된다.\n\nmy answer\n\n`10`. 100이라는 단어가 포함된 문장은 모두 몇 개 인가?\n\nhint: 아래의 코드를 관찰\n\nmy answer\n\n# 5 \n\nHW 0327 (1)\n\n[04wk-1: 파이썬의 자료형 (6)](https://guebin.github.io/PP2023/posts/01_PythonBasic/2023-03-27-4wk-1.html)\n\n`ssh코드`: 1-2\n\n아래의 문자열을 고려하자.\n\n`1`. 이 문자열에서 index = 0,2,4,6,8,... 에 해당하는 원소를 출력하는 코드를 작성하라. (2022-파이썬입문 중간고사 1-(2) 참고)\n\n```python\n# 출력결과는 아래와 같아야 한다. \n\n'shraAABNa1cEAAIAAEkOpDrH1SrTpLG9jmBDUP+azHTWhIy5w8HJ9bUriz7lLV49F5VbpSgcaPvkd/TBWFRHoFRtqi1KXHZMiqVRsAwsMvlK7A3aJAnMQx+VW6/Im1uFjJpr8XpDjNyv/bretEm+WOPTI9PVLar2E6/lbg331KtIj2od1rTMVsxrF9r+7= cao@yatplcl'\n```\n\n`2`. 위 문자열을 뒤집은 문자열을 구하는 코드를 구현하라. (2022-파이썬입문 중간고사 1-(4) 참고)\n\n```python\n# 출력결과는 아래와 같아야 한다. \n\n'lacol.potpalym@nocahcs ==Q7M+frw9iFRrNxbsSVqMlTarQ10d1os2njkImtaKn1+3r3wg+b8li/Z68Ec2DryauLMVmPZ98IPTnPZO4WA+ZmnE/trewr0bP/wv6ybNYjvDNpyX88XrrpKJQjlFUuz1bmFIe/86wW0V3+5x9Q1McnsAoJoaF3tAX7/KVlSvFMdsdwQANsjR6V8qLicMsZAHpXhKn1XixqBtiRXF3oAH+RCFXWlByTM/JdOk7vbP3adc0gwSppPbkVQ5XFl9h4fVELElx7MzQivrFUhbj9WJ4HJ81we5Zy4Idh7WYTDHlzfan+lPGUSDWB/mojT9KGTLNpITmrbS71YHfrHDkpUOlkAEQAAAwIBAAAAE2cy1CazN3BAAAA asr-hss'\n```\n\n`파이썬 프로그래밍 시험성적`: 3-4\n\n아래와 같은 dictionary가 있다고 가정하자.\n\n여기에서 ‘202212377’ 등은 학번을, att는 출석점수, rep는 레포트점수, mid는 중간고사 점수, fin은 기말고사 점수를 의미한다.\n\n`3`. 학생들의 학번을 아래와 같은 방식으로 출력하는 코드를 작성하라.\n\n```python\n# 출력예시\n\n['2022-12377',\n '2022-12473',\n '2022-12310',\n '2022-12460',\n '2022-12320',\n '2022-12329',\n '2022-12408',\n '2022-12319',\n '2022-12348',\n '2022-12306',\n '2022-12308',\n '2022-12366',\n '2022-12367',\n '2022-12461']\n```\n\nerror on my answer\n\n<font color=green>띄어쓰기가 있고, ''로 묶이지도 않았고, 리스트로 묶이지도 않음</font>\n\n`4`. 출석점수가 70점 이상인(>=70) 학생들의 학번을 출력하는 코드를 작성하라. (2022-파이썬입문 중간고사 2-(3) 참고)\n\n```python\n# 출력예시 \n\n['2022-12473',\n '2022-12320',\n '2022-12329',\n '2022-12348',\n '2022-12306',\n '2022-12366',\n '2022-12367']\n```\n\nmy answer\n\n---\n\n`Oxford-III`: 5–10 // [reference](https://www.robots.ox.ac.uk/~vgg/data/pets/)\n\n아래는 이미지 파일명들이 저장된 string을 불러오는 코드이다.\n\ntxt의 출력 일부를 나타내면 아래와 같다.\n\n`5`. 각 파일명은 \\n으로 구분되어있다. 위의 스트링을 분해하여 아래와 같은 리스트를 생성하고 fname_list에 저장하라.\n\n```python\n# fname_list 의 출력결과는 아래와 같아야 한다. \n['Abyssinian_1.jpg','Abyssinian_10.jpg', ... ,'yorkshire_terrier_98.jpg', 'yorkshire_terrier_99.jpg']\n```\n\n`6`. 각 이미지파일명은 아래와 같은 규칙으로 저장되어 있다.\n\n- 파일명의 첫글자가 대문자이면 고양이를 의미하고 첫글자가 소문자이면 강아지를 의미한다.\n- `_` 이전의 영문명은 고양이 혹은 강아지의 종(breed)을 의미한다.\n- 이미지 파일명이 입력으로 오면 강아지인지 고양이인지 판단하여 ‘cat’ or ’dog’를 리턴하는 함수 f를 구현하라.\n\n```python\n(함수사용예시)\n\nf('yorkshire_terrier_99.jpg')\n'dog'\nf('Abyssinian_1.jpg')\n'cat'\n```\n\nmy answer\n\n`7`. 5의 결과로 나온 fname_list를 입력으로 하고 리스트의 각 원소가 고양이를 의미하는 그림인지 강아지를 의미하는 그림인지 나타내는 리스트를 만들어라.\n\n```python\n## 입력예시 \n['Abyssinian_1.jpg','Abyssinian_10.jpg',...,'yorkshire_terrier_98.jpg', 'yorkshire_terrier_99.jpg']\n## 출력예시\n['cat', 'cat', ... , 'dog', 'dog']\n```\n\nmy answer\n\n`8`. 강아지 그림과 고양이 그림이 각각 몇 장씩 포함되어 있는지 파악하는 코드를 구현하라.\n\nmy answer\n\n`9`. 포메라니안 종의 그림이 몇장있는지 파악하는 코드를 구현하라.\n\nhint: 포메라니안 그림은 파일명에 ‘pomeranian’ 을 포함한다.\n\nmy answer\n\n<font color=green>'pomeranian'을 포함하면 0이 return 되고 아니면 -1이 return되는 코드로 길게 짰다.</font>\n\n`10`. 아래의 dct는 포메라니안과 사모예드가 각각 몇장씩 포함되어있는지 정리하기 위해 임시로 정리한 dictionary이다. 각 종이 몇 장씩 포함되어있는지 구하여 dct를 수정하라.\n\n예를들어 포메라니안과 사모에예드의 그림이 각각 200장씩 있다면 아래와 같이 딕셔너리를 수정해야한다.\n\nmy answer\n\n# 6.\n\nHW 0327 (2)\n\n\n[04wk-1: 파이썬의 자료형 (6)](https://guebin.github.io/PP2023/posts/01_PythonBasic/2023-03-27-4wk-1.html#%ED%95%A8%EC%88%98%EA%B3%A0%EA%B8%89-if%EB%AC%B8%EC%9D%B4-%ED%8F%AC%ED%95%A8%EB%90%9C-%EB%A6%AC%ED%84%B4)\n\n`1`. 아래와 같은 맵핑을 고려하자.\n\n|문자|숫자|\n|:--:|:--:|\n|a|1|\n|b|0|\n\n이를 딕셔너리로 표현하면 아래와 같다.\n\n위 규칙에 따라서 아래의 리스트의 원소를 문자로 각각 변환하라.\n\n```python\n# 출력은 아래와 같아야 한다. \n['b', 'a', 'b', 'a', 'b', 'a', 'b', 'b', 'b', 'b', 'a', 'a', 'b', 'a', 'b']\n```\n\nerror on my answer\n\n<font color=green>인덱싱된 값(value)을 가져와서 lst랑 비교한다음 id랑 연결해야 하는데, 연결해서 가져오는 법을 몰랐다.</font>\n\n`2`. 아래와 같은 맵핑을 고려하자.\n\n|월|의미|\n|:--:|:--:|\n|1,2|겨울방학|\n|3,4,5,6|1학기|\n|7,8|여름방학|\n|9,10,11,12|2학기|\n\n이러한 규칙에 맞게 아래의 리스트를 적절한 문자열로 변환하라.\n\n```python\n## 출력은 아래와 같아야 한다. \n['겨울방학', '겨울방학', '겨울방학', '1학기', '1학기', '1학기', '1학기', '여름방학', '여름방학', '2학기', '2학기', '2학기', '2학기', '2학기']\n```\n\nmy answer\n\n<font color=green>`if c in v`을 못 씀.....</font>\n\n---\n\n`합성변환` 3-5.\n\n아래와 같은 맵핑을 고려하자.\n\n(규칙1)\n\n|문자|숫자|\n|:--:|:--:|\n|바나나|0|\n|사과|1|\n|오토바이|2|\n|자동차|3|\n|자전거|4|\n\n(규칙2)\n\n|아이템|카테고리|\n|:--:|:--:|\n|바나나|과일|\n|사과|과일|\n|오토바이|탈것|\n|자동차|탈것|\n|자전거|탈것|\n\n각각의 규칙을 나타내는 딕셔너리는 아래와 같이 선언되어있다고 하자.\n\n`3`. 규칙1를 이용하여 아래와 같은 리스트를 변환하는 함수를 구현하고 그 함수를 f라 선언하라.\n\n```python\n# 입력 \n[0,1,0,1,4]\n\n# 출력 \n['바나나', '사과', '바나나', '사과', '자전거']\n```\n\n```python\n(사용예시)\n\nf([0,1,0,1,4])\n\n['바나나', '사과', '바나나', '사과', '자전거']\n```\n\nmy answer\n\n`4`. 규칙2를 이용하여 아래와 같이 리스트를 변환하는 함수를 구현하고 그 함수를 g라고 선언하라.\n\n```python\n# 입력 \n['바나나','바나나','바나나','자동차']\n\n# 출력 \n['과일','과일','과일','탈것']\n\n(사용예시)\n\ng(['바나나','바나나','바나나','자동차'])\n\n['과일', '과일', '과일', '탈것']\n```\n\nmy answer\n\n`5`. 규칙1-2를 이용하여 아래와 같은 숫자로 이루어진 입력을 ‘과일’, ‘탈것’ 중 하나로 바꾸는 코드를 구현하라.\n\n```python\n# 입력 \n[0,1,0,1,3,4,2,2,3,4,1,0]\n\n# 출력 \n['과일', '과일', '과일', '과일', '탈것', '탈것', '탈것', '탈것', '탈것', '탈것', '과일', '과일']\n```\n\nhint $g(f(x))$ 를 이용하라.\n\nmy answer\n\n# 7.\n\n[04wk-2: 파이썬의 자료형 (7)](https://guebin.github.io/PP2023/posts/01_PythonBasic/2023-03-29-4wk-2.html)\n\n`Oxford-III`: 1–5 // [reference](https://www.robots.ox.ac.uk/~vgg/data/pets/)\n\n아래는 이미지 파일명들이 저장된 string을 불러오는 코드이다.\n\n이미지파일이 저장된 형식은 아래와 같다.\n\n```python\nAbyssinian_1.jpg\nBritish_Shorthair_129.jpg\n```\n**note**: British_Shorthair와 같이 종 이름 사이에 _가 들어있는 경우도 있음.\n\n`1`. txt를 적당히 변환하여 아래와 같은 list를 만들어라.\n\n```python\nlst[:10],lst[810:820]\n\n(['Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian'],\n ['BritishShorthair',\n  'BritishShorthair',\n  'BritishShorthair',\n  'BritishShorthair',\n  'BritishShorthair',\n  'BritishShorthair',\n  'BritishShorthair',\n  'BritishShorthair',\n  'BritishShorthair',\n  'BritishShorthair'])\n```\n\n**hint1**\n\n**hint2**\n\n(풀이1)\n\n(풀이2)\n\nmy answer\n\n`2`. 그림파일에는 총 몇가지 종류의 고양이와, 몇가지 종류의 강아지가 있는가?\n\n**note**: 고양이사진은 대문자로 시작하고, 강아지 사진은 소문자로 시작한다.\n\n**note**: 12종의 고양이, 25종의 강아지가 있음\n\nmy answer\n\n`3`. 아래는 1번의 결과로 얻어진 lst의 첫 10개의 원소와 마지막 10개의 원소이다.\n\n```python\nlst[:10], lst[-10:]\n\n(['Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian'],\n ['yorkshireterrier',\n  'yorkshireterrier',\n  'yorkshireterrier',\n  'yorkshireterrier',\n  'yorkshireterrier',\n  'yorkshireterrier',\n  'yorkshireterrier',\n  'yorkshireterrier',\n  'yorkshireterrier',\n  'yorkshireterrier'])\n```\n\n적당한 변환을 정의하여 lst를 아래와 같이 바꾸어라.\n\n```python\nlst2[:10], lst2[-10:] # 바뀐 lst\n(['cat', 'cat', 'cat', 'cat', 'cat', 'cat', 'cat', 'cat', 'cat', 'cat'],\n ['dog', 'dog', 'dog', 'dog', 'dog', 'dog', 'dog', 'dog', 'dog', 'dog'])\n```\n\n(풀이1)\n\n(풀이2)\n\nmy answer\n\n`4`. txt에는 강아지사진과 고양이사진이 모두 몇장씩 들어있는가?\n\n```python\n## 출력예시 \n\n{'dog': 4990, 'cat': 2403}\n```\n\nmy answer\n\n<font color=green>너무 길게 코드를 짰다.. 비.효.율.적.</font>\n\n`5`. txt에 각 종별로 몇장의 사진이 있는지 조사하라.\n\n```python\n## 출력예시\n\n{'beagle': 200,\n 'scottishterrier': 199,\n 'newfoundland': 200,\n 'Birman': 200,\n 'Bombay': 200,\n 'pug': 200,\n 'germanshorthaired': 200,\n 'samoyed': 200,\n 'Sphynx': 200,\n 'englishsetter': 200,\n 'Bengal': 200,\n 'MaineCoon': 200,\n 'Persian': 200,\n 'boxer': 200,\n 'staffordshirebullterrier': 191,\n 'Siamese': 200,\n 'bassethound': 200,\n 'wheatenterrier': 200,\n 'englishcockerspaniel': 200,\n 'Ragdoll': 200,\n 'yorkshireterrier': 200,\n 'EgyptianMau': 200,\n 'BritishShorthair': 200,\n 'keeshond': 200,\n 'RussianBlue': 200,\n 'saintbernard': 200,\n 'americanbulldog': 200,\n 'Abyssinian': 203,\n 'leonberger': 200,\n 'greatpyrenees': 200,\n 'japanesechin': 200,\n 'pomeranian': 200,\n 'chihuahua': 200,\n 'shibainu': 200,\n 'americanpitbullterrier': 200,\n 'miniaturepinscher': 200,\n 'havanese': 200}\n```\n","srcMarkdownNoYaml":"\n\n# 1.\n\nHW: 0315\n\n[02wk-1: 파이썬의 자료형 (2)](https://guebin.github.io/PP2023/posts/01_PythonBasic/2023-03-13-2wk-1.html#%EA%B0%95%EC%9D%98%EC%98%81%EC%83%81)\n\n아래와 같은 문자열이 있다고 하자.\n\n`1`. 적당한 인덱싱을 통하여 출력결과가 아래와 같도록 하라.\n\nhint: University는 10글자이다.\n\n`2`. 출력결과가 아래와 같도록 하는 코드를 작성하라. (lower 함수를 이용할 것)\n\n`3`. 아래의 코드를 관찰하고 isupper()의 기능이 무엇인지 스스로 정리해보라.\n\n대문자인가 확인하는 코드!\n\n소문자인거 확인하는 코드!\n\n`4`. 다음중 실행 불가능한 코드를 모두 골라라.\n\n(a) 'a'*2 \n\n(b) 'a'*'2'\n\n(c) 'a'+2 \n\n(d) 'a'+'2'\n\n# 2.\n\nHW 0315\n\n[02wk-2: 파이썬의 자료형 (3)](https://guebin.github.io/PP2023/posts/01_PythonBasic/2023-03-15-2wk-2.html)\n\n`1`. 길이가 0인 리스트를 만들어라. (비어있는 리스트를 만들어라)\n\n(풀이1)\n\n(풀이2)\n\n`2`. 다음의 실행값 중 가장 큰 숫자가 나오는 보기를 골라라. (에러가 나는 코드는 정답에서 제외함)\n\n`3`. 아래의 예제를 관찰하라.\n\n이 예제를 바탕으로 문자열에 포함된 .format()함수의 기능을 유추하라. 그리고 아래의 결과를 확인하라.\n\n$\\to$ `.format`의 기능은 `{}`에 문자를 순서대로 넣어주는 역할.\n\n`4`. 아래의 예제를 관찰하라.\n\n이 예제를 바탕으로 문자열의 .replace() 기능을 유추하라.\n\n$\\to$ `.replace`의 기능은 'g'를 'u'로 바꿔준다.\n\n`5`. 리스트자료형의 +와 * 연산을 이용하여 아래와 같은 list를 생성하라.\n\nhint: 아래의 코드를 관찰해보세요\n\n`6`. 넘파이를 이용하여 아래와 같은 결과가 나오도록 코드가 작성하라.\n\n$$\\begin{bmatrix}\n1 \\\\\n2 \n\\end{bmatrix} + \\begin{bmatrix}\n11 \\\\\n22 \n\\end{bmatrix} = \n\\begin{bmatrix}\n12 \\\\\n24\n\\end{bmatrix}$$\n\n7. 아래와 같은 벡터가 있다고 하자.\n\n$$\\boldsymbol{a}=\n\\begin{bmatrix}\n12 \\\\\n24\n\\end{bmatrix}$$\n\n넘파이를 이용하여 아래의 결과가 나오게 하는 코드를 작성하라.\n\n$$2\\boldsymbol{a}=\n\\begin{bmatrix}\n24 \\\\\n48\n\\end{bmatrix}$$ \n\n# 3.\n\nHW 0320\n\n[03wk-1: 파이썬의 자료형 (4)](https://guebin.github.io/PP2023/posts/01_PythonBasic/2023-03-20-3wk-1.html)\n\n`1`. 아래의 코드를 관찰하고, sum()의 기능을 유추하라.\n\n$\\to$ 원소의 합\n\n$\\to$ True는 1로, False는 0으로 인식\n\n`2`. 다음과 같은 리스트를 고려하자.\n\n이를 수식으로 표현하면 아래와 같다.\n\n${\\bf x} = [x_1,\\dots,x_{13}]=[80,60,80,90,55,85,95,100,35,70,75,65,95]$\n\n리스트의 원소중 \"$x_i>80$\" 의 조건을 만족하는 원소는 모두 몇개인가? \n\nhint: 리스트컴프리헨션과 `sum()`함수를 이용할 것\n\nmy answer\n\n`3`. 다음과 같은 리스트를 고려하자.\n\n이 리스트에서 ‘A’ 혹은 ’B’의 숫자는 모두 몇개인가?\n\nhint: 아래를 관찰\n\nmy answer\n\n`4`. 아래와 같은 리스트가 있다고 하자.\n\n${\\bf x} = [1,2,1,5,6,2,4,7]$\n\n${\\bf y} = [3,2,4,1,2,5,6,7]$\n\n이러한 벡터를 파이썬에서 표현하기 위해서 아래와 같은 리스트를 만들었다고 하자.\n\n리스트컴프리헨션을 이용하여 \n\n$${\\bf z}=[x_1^2+y_1^2, \\dots, x_{8}^2+y_{8}^2]=[x_i^2+y_i^2: \\text{for $i = 1,2,3,\\dots,8$}]$$ \n\n와 같은 리스트를 생성하라. \n\nmy answer\n\n`5`. 아래와 같은 문자열이 있다고 하자.\n\n이 문자열에서 대문자의 수를 count하라. (2022년 파이썬입문 중간고사 1-(5) 참고)\n\nerror on my answer\n\n<font color=green>이렇게 비교하면 대문자인 것은 세겠지만, 기호가 같은 것도 세기 때문에 over해서 sum하게 된다.</font>\n\n`6`. 리스트컴프리헨션을 이용하여 아래와 같은 리스트를 생성하라. (2022년 파이썬입문 중간고사 1-(7) 참고)\n\n```python\n['a',\n 'aa',\n 'aaa',\n 'aaaa',\n 'aaaaa',\n 'aaaaaa',\n 'aaaaaaa',\n 'aaaaaaaa',\n 'aaaaaaaaa',\n 'aaaaaaaaaa'] <- a가 10개있음\n```\n\nmy answer\n\n`7`. 아래와 같은 list가 있다고 하자.\n\ntest_lst와 리스트컴프리헨션을 이용하여 아래를 출력하는 코드를 구현하라. (2022년 파이썬입문 중간고사 1-(9) 참고)\n\nmy answer\n\n`8`. 아래와 같은 list를 생성하라.\n\n```python\n[1,\n 2,2,\n 3,3,3,\n 4,4,4,4,\n 5,5,5,5,5,\n ...\n 9,9,9,9,9,9,9,9,9] <- 9가 9개 있음 \n```\n\n(풀이1) – 의도한 풀이\n\n(풀이2) – 이걸 의도한건 아니었음…\n\nerror on my answer\n\nright answer\n\n`9`. 아래와 같은 리스트를 관찰하라.\n\n이러한 리스트를 아래와 같은 리스트로 변환하는 코드를 작성하라.\n\nhint: string의 .replace()기능과 리스트 컴프리헨션의 응용\n\nmy answer\n\n`10`. 아래와 같은 문자열을 고려하라.\n\n띄어쓰기를 제거하는 코드를 구현하라. 즉 출력결과가 아래와 같도록 만드는 코드를 구현하라.\n\nhint: 아래코드 관찰\n\nmy answer\n\n`11`. 아래의 코드를 관찰하라.\n\n'dd'에 있는 내용을 이용하여 join의 원소들을 합쳐라.\n\n`12`. 아래와 같이 하나의 특수문자로 이루어진 리스트를 고려하자.\n\n이를 이용하여 아래와 같은 결과를 출력하라.\n\nhint: 11번 문제의 코드를 응용할 것\n\nmy answer\n\n# 4.\n\nHW: 03-22 (2)\n\n[03wk-2: 파이썬의 자료형 (5)](03wk-2: 파이썬의 자료형 (5))\n\n`1`. 길이가 1인 튜플을 만들어 자신의 학번을 저장하라. 길이가 1인 튜플을 만들어 자신의 영문이름을 저장하라. 두 튜플을 + 연산자로 합쳐아래와 같은 출력결과를 얻어라. 최종 결과는 예를들면 아래와 같아야 한다.\n\nmy answer\n\n`2-5`. 아래는 파이썬프로그래밍 수강생들의 학번, 이름, 출석점수, 과제점수, 중간고사점수, 기말고사점수를 저장한 중첩리스트이다.\n\n`2`. 파이썬프로그래밍 수강생의 수는 모두 몇명인가?\n\n`3`. 전북대학교 지침에 따라 출석점수가 7보다 작은 학생은 (즉 `출석점수 < 7` 일 경우) F학점을 부여하게 되어있다. 이 기준에 따르면 F를 받는 학생은 모두 몇명인가?\n\nmy answer\n\n풀이 뜯어보기\n\n순서대로 학번, 이름, 출석점수, 나머지~\n\n---\n\n`-`\n\n`-`\n\n---\n\n`4`. 파이썬프로그래밍 수업의 경우 출석+레포트 < 21 일 경우 F학점을 부여한다고 한다. 이 기준에 따르면 F를 받는 학생은 모두 몇명인가?\n\nmy answer\n\n`5`. 리스트의 정렬순서를 [학번, 이름, …, 기말고사점수] 가 아니라 [이름, 학번, … , 기말고사점수] 와 같이 되도록 변경하는 코드를 작성하라.\n\nmy answer\n\n`6`. 아래의 코드를 관찰하라.\n\n이 코드를 바탕으로 split의 기능을 유추하라.\n\n$\\to$ `split`은 호출한 문자 기준으로 문자 나누는 역할\n\n`7`. 6의 실행결과를 되돌리는 코드를 작성하라. 즉\n\n와 같은 리스트를 아래의 string으로 바꾸는 코드를 작성하라.\n\nhint: join을 이용할 것\n\nmy answer\n\n다음은 인터넷에서 긁어온 어떠한 텍스트이다.\n\n`8`. text는 총 몇개의 문장으로 이루어져 있는가?\n\nhint: 이 텍스트의 문장은 모두 .로 끝난다.\n\nerror on my answer\n\n$\\to$ . 띄어쓰기를 생각 못 함\n\n`9`. 각 문장은 몇개의 단어로 이루어져 있는가?\n\nhint: 각 단어는 공백으로 구분된다.\n\nmy answer\n\n`10`. 100이라는 단어가 포함된 문장은 모두 몇 개 인가?\n\nhint: 아래의 코드를 관찰\n\nmy answer\n\n# 5 \n\nHW 0327 (1)\n\n[04wk-1: 파이썬의 자료형 (6)](https://guebin.github.io/PP2023/posts/01_PythonBasic/2023-03-27-4wk-1.html)\n\n`ssh코드`: 1-2\n\n아래의 문자열을 고려하자.\n\n`1`. 이 문자열에서 index = 0,2,4,6,8,... 에 해당하는 원소를 출력하는 코드를 작성하라. (2022-파이썬입문 중간고사 1-(2) 참고)\n\n```python\n# 출력결과는 아래와 같아야 한다. \n\n'shraAABNa1cEAAIAAEkOpDrH1SrTpLG9jmBDUP+azHTWhIy5w8HJ9bUriz7lLV49F5VbpSgcaPvkd/TBWFRHoFRtqi1KXHZMiqVRsAwsMvlK7A3aJAnMQx+VW6/Im1uFjJpr8XpDjNyv/bretEm+WOPTI9PVLar2E6/lbg331KtIj2od1rTMVsxrF9r+7= cao@yatplcl'\n```\n\n`2`. 위 문자열을 뒤집은 문자열을 구하는 코드를 구현하라. (2022-파이썬입문 중간고사 1-(4) 참고)\n\n```python\n# 출력결과는 아래와 같아야 한다. \n\n'lacol.potpalym@nocahcs ==Q7M+frw9iFRrNxbsSVqMlTarQ10d1os2njkImtaKn1+3r3wg+b8li/Z68Ec2DryauLMVmPZ98IPTnPZO4WA+ZmnE/trewr0bP/wv6ybNYjvDNpyX88XrrpKJQjlFUuz1bmFIe/86wW0V3+5x9Q1McnsAoJoaF3tAX7/KVlSvFMdsdwQANsjR6V8qLicMsZAHpXhKn1XixqBtiRXF3oAH+RCFXWlByTM/JdOk7vbP3adc0gwSppPbkVQ5XFl9h4fVELElx7MzQivrFUhbj9WJ4HJ81we5Zy4Idh7WYTDHlzfan+lPGUSDWB/mojT9KGTLNpITmrbS71YHfrHDkpUOlkAEQAAAwIBAAAAE2cy1CazN3BAAAA asr-hss'\n```\n\n`파이썬 프로그래밍 시험성적`: 3-4\n\n아래와 같은 dictionary가 있다고 가정하자.\n\n여기에서 ‘202212377’ 등은 학번을, att는 출석점수, rep는 레포트점수, mid는 중간고사 점수, fin은 기말고사 점수를 의미한다.\n\n`3`. 학생들의 학번을 아래와 같은 방식으로 출력하는 코드를 작성하라.\n\n```python\n# 출력예시\n\n['2022-12377',\n '2022-12473',\n '2022-12310',\n '2022-12460',\n '2022-12320',\n '2022-12329',\n '2022-12408',\n '2022-12319',\n '2022-12348',\n '2022-12306',\n '2022-12308',\n '2022-12366',\n '2022-12367',\n '2022-12461']\n```\n\nerror on my answer\n\n<font color=green>띄어쓰기가 있고, ''로 묶이지도 않았고, 리스트로 묶이지도 않음</font>\n\n`4`. 출석점수가 70점 이상인(>=70) 학생들의 학번을 출력하는 코드를 작성하라. (2022-파이썬입문 중간고사 2-(3) 참고)\n\n```python\n# 출력예시 \n\n['2022-12473',\n '2022-12320',\n '2022-12329',\n '2022-12348',\n '2022-12306',\n '2022-12366',\n '2022-12367']\n```\n\nmy answer\n\n---\n\n`Oxford-III`: 5–10 // [reference](https://www.robots.ox.ac.uk/~vgg/data/pets/)\n\n아래는 이미지 파일명들이 저장된 string을 불러오는 코드이다.\n\ntxt의 출력 일부를 나타내면 아래와 같다.\n\n`5`. 각 파일명은 \\n으로 구분되어있다. 위의 스트링을 분해하여 아래와 같은 리스트를 생성하고 fname_list에 저장하라.\n\n```python\n# fname_list 의 출력결과는 아래와 같아야 한다. \n['Abyssinian_1.jpg','Abyssinian_10.jpg', ... ,'yorkshire_terrier_98.jpg', 'yorkshire_terrier_99.jpg']\n```\n\n`6`. 각 이미지파일명은 아래와 같은 규칙으로 저장되어 있다.\n\n- 파일명의 첫글자가 대문자이면 고양이를 의미하고 첫글자가 소문자이면 강아지를 의미한다.\n- `_` 이전의 영문명은 고양이 혹은 강아지의 종(breed)을 의미한다.\n- 이미지 파일명이 입력으로 오면 강아지인지 고양이인지 판단하여 ‘cat’ or ’dog’를 리턴하는 함수 f를 구현하라.\n\n```python\n(함수사용예시)\n\nf('yorkshire_terrier_99.jpg')\n'dog'\nf('Abyssinian_1.jpg')\n'cat'\n```\n\nmy answer\n\n`7`. 5의 결과로 나온 fname_list를 입력으로 하고 리스트의 각 원소가 고양이를 의미하는 그림인지 강아지를 의미하는 그림인지 나타내는 리스트를 만들어라.\n\n```python\n## 입력예시 \n['Abyssinian_1.jpg','Abyssinian_10.jpg',...,'yorkshire_terrier_98.jpg', 'yorkshire_terrier_99.jpg']\n## 출력예시\n['cat', 'cat', ... , 'dog', 'dog']\n```\n\nmy answer\n\n`8`. 강아지 그림과 고양이 그림이 각각 몇 장씩 포함되어 있는지 파악하는 코드를 구현하라.\n\nmy answer\n\n`9`. 포메라니안 종의 그림이 몇장있는지 파악하는 코드를 구현하라.\n\nhint: 포메라니안 그림은 파일명에 ‘pomeranian’ 을 포함한다.\n\nmy answer\n\n<font color=green>'pomeranian'을 포함하면 0이 return 되고 아니면 -1이 return되는 코드로 길게 짰다.</font>\n\n`10`. 아래의 dct는 포메라니안과 사모예드가 각각 몇장씩 포함되어있는지 정리하기 위해 임시로 정리한 dictionary이다. 각 종이 몇 장씩 포함되어있는지 구하여 dct를 수정하라.\n\n예를들어 포메라니안과 사모에예드의 그림이 각각 200장씩 있다면 아래와 같이 딕셔너리를 수정해야한다.\n\nmy answer\n\n# 6.\n\nHW 0327 (2)\n\n\n[04wk-1: 파이썬의 자료형 (6)](https://guebin.github.io/PP2023/posts/01_PythonBasic/2023-03-27-4wk-1.html#%ED%95%A8%EC%88%98%EA%B3%A0%EA%B8%89-if%EB%AC%B8%EC%9D%B4-%ED%8F%AC%ED%95%A8%EB%90%9C-%EB%A6%AC%ED%84%B4)\n\n`1`. 아래와 같은 맵핑을 고려하자.\n\n|문자|숫자|\n|:--:|:--:|\n|a|1|\n|b|0|\n\n이를 딕셔너리로 표현하면 아래와 같다.\n\n위 규칙에 따라서 아래의 리스트의 원소를 문자로 각각 변환하라.\n\n```python\n# 출력은 아래와 같아야 한다. \n['b', 'a', 'b', 'a', 'b', 'a', 'b', 'b', 'b', 'b', 'a', 'a', 'b', 'a', 'b']\n```\n\nerror on my answer\n\n<font color=green>인덱싱된 값(value)을 가져와서 lst랑 비교한다음 id랑 연결해야 하는데, 연결해서 가져오는 법을 몰랐다.</font>\n\n`2`. 아래와 같은 맵핑을 고려하자.\n\n|월|의미|\n|:--:|:--:|\n|1,2|겨울방학|\n|3,4,5,6|1학기|\n|7,8|여름방학|\n|9,10,11,12|2학기|\n\n이러한 규칙에 맞게 아래의 리스트를 적절한 문자열로 변환하라.\n\n```python\n## 출력은 아래와 같아야 한다. \n['겨울방학', '겨울방학', '겨울방학', '1학기', '1학기', '1학기', '1학기', '여름방학', '여름방학', '2학기', '2학기', '2학기', '2학기', '2학기']\n```\n\nmy answer\n\n<font color=green>`if c in v`을 못 씀.....</font>\n\n---\n\n`합성변환` 3-5.\n\n아래와 같은 맵핑을 고려하자.\n\n(규칙1)\n\n|문자|숫자|\n|:--:|:--:|\n|바나나|0|\n|사과|1|\n|오토바이|2|\n|자동차|3|\n|자전거|4|\n\n(규칙2)\n\n|아이템|카테고리|\n|:--:|:--:|\n|바나나|과일|\n|사과|과일|\n|오토바이|탈것|\n|자동차|탈것|\n|자전거|탈것|\n\n각각의 규칙을 나타내는 딕셔너리는 아래와 같이 선언되어있다고 하자.\n\n`3`. 규칙1를 이용하여 아래와 같은 리스트를 변환하는 함수를 구현하고 그 함수를 f라 선언하라.\n\n```python\n# 입력 \n[0,1,0,1,4]\n\n# 출력 \n['바나나', '사과', '바나나', '사과', '자전거']\n```\n\n```python\n(사용예시)\n\nf([0,1,0,1,4])\n\n['바나나', '사과', '바나나', '사과', '자전거']\n```\n\nmy answer\n\n`4`. 규칙2를 이용하여 아래와 같이 리스트를 변환하는 함수를 구현하고 그 함수를 g라고 선언하라.\n\n```python\n# 입력 \n['바나나','바나나','바나나','자동차']\n\n# 출력 \n['과일','과일','과일','탈것']\n\n(사용예시)\n\ng(['바나나','바나나','바나나','자동차'])\n\n['과일', '과일', '과일', '탈것']\n```\n\nmy answer\n\n`5`. 규칙1-2를 이용하여 아래와 같은 숫자로 이루어진 입력을 ‘과일’, ‘탈것’ 중 하나로 바꾸는 코드를 구현하라.\n\n```python\n# 입력 \n[0,1,0,1,3,4,2,2,3,4,1,0]\n\n# 출력 \n['과일', '과일', '과일', '과일', '탈것', '탈것', '탈것', '탈것', '탈것', '탈것', '과일', '과일']\n```\n\nhint $g(f(x))$ 를 이용하라.\n\nmy answer\n\n# 7.\n\n[04wk-2: 파이썬의 자료형 (7)](https://guebin.github.io/PP2023/posts/01_PythonBasic/2023-03-29-4wk-2.html)\n\n`Oxford-III`: 1–5 // [reference](https://www.robots.ox.ac.uk/~vgg/data/pets/)\n\n아래는 이미지 파일명들이 저장된 string을 불러오는 코드이다.\n\n이미지파일이 저장된 형식은 아래와 같다.\n\n```python\nAbyssinian_1.jpg\nBritish_Shorthair_129.jpg\n```\n**note**: British_Shorthair와 같이 종 이름 사이에 _가 들어있는 경우도 있음.\n\n`1`. txt를 적당히 변환하여 아래와 같은 list를 만들어라.\n\n```python\nlst[:10],lst[810:820]\n\n(['Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian'],\n ['BritishShorthair',\n  'BritishShorthair',\n  'BritishShorthair',\n  'BritishShorthair',\n  'BritishShorthair',\n  'BritishShorthair',\n  'BritishShorthair',\n  'BritishShorthair',\n  'BritishShorthair',\n  'BritishShorthair'])\n```\n\n**hint1**\n\n**hint2**\n\n(풀이1)\n\n(풀이2)\n\nmy answer\n\n`2`. 그림파일에는 총 몇가지 종류의 고양이와, 몇가지 종류의 강아지가 있는가?\n\n**note**: 고양이사진은 대문자로 시작하고, 강아지 사진은 소문자로 시작한다.\n\n**note**: 12종의 고양이, 25종의 강아지가 있음\n\nmy answer\n\n`3`. 아래는 1번의 결과로 얻어진 lst의 첫 10개의 원소와 마지막 10개의 원소이다.\n\n```python\nlst[:10], lst[-10:]\n\n(['Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian',\n  'Abyssinian'],\n ['yorkshireterrier',\n  'yorkshireterrier',\n  'yorkshireterrier',\n  'yorkshireterrier',\n  'yorkshireterrier',\n  'yorkshireterrier',\n  'yorkshireterrier',\n  'yorkshireterrier',\n  'yorkshireterrier',\n  'yorkshireterrier'])\n```\n\n적당한 변환을 정의하여 lst를 아래와 같이 바꾸어라.\n\n```python\nlst2[:10], lst2[-10:] # 바뀐 lst\n(['cat', 'cat', 'cat', 'cat', 'cat', 'cat', 'cat', 'cat', 'cat', 'cat'],\n ['dog', 'dog', 'dog', 'dog', 'dog', 'dog', 'dog', 'dog', 'dog', 'dog'])\n```\n\n(풀이1)\n\n(풀이2)\n\nmy answer\n\n`4`. txt에는 강아지사진과 고양이사진이 모두 몇장씩 들어있는가?\n\n```python\n## 출력예시 \n\n{'dog': 4990, 'cat': 2403}\n```\n\nmy answer\n\n<font color=green>너무 길게 코드를 짰다.. 비.효.율.적.</font>\n\n`5`. txt에 각 종별로 몇장의 사진이 있는지 조사하라.\n\n```python\n## 출력예시\n\n{'beagle': 200,\n 'scottishterrier': 199,\n 'newfoundland': 200,\n 'Birman': 200,\n 'Bombay': 200,\n 'pug': 200,\n 'germanshorthaired': 200,\n 'samoyed': 200,\n 'Sphynx': 200,\n 'englishsetter': 200,\n 'Bengal': 200,\n 'MaineCoon': 200,\n 'Persian': 200,\n 'boxer': 200,\n 'staffordshirebullterrier': 191,\n 'Siamese': 200,\n 'bassethound': 200,\n 'wheatenterrier': 200,\n 'englishcockerspaniel': 200,\n 'Ragdoll': 200,\n 'yorkshireterrier': 200,\n 'EgyptianMau': 200,\n 'BritishShorthair': 200,\n 'keeshond': 200,\n 'RussianBlue': 200,\n 'saintbernard': 200,\n 'americanbulldog': 200,\n 'Abyssinian': 203,\n 'leonberger': 200,\n 'greatpyrenees': 200,\n 'japanesechin': 200,\n 'pomeranian': 200,\n 'chihuahua': 200,\n 'shibainu': 200,\n 'americanpitbullterrier': 200,\n 'miniaturepinscher': 200,\n 'havanese': 200}\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"2023-08-26-ct_pp_hw.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.315","theme":"pulse","code-copy":false,"title-block-banner":true,"comments":{"utterances":{"repo":"seoyeonc/md"}},"title":"**[Coding Test]**Python Programming HW review","author":"SEOYEON CHOI","date":"2023-08-26"},"extensions":{"book":{"multiFile":true}}},"ipynb":{"identifier":{"display-name":"Jupyter","target-format":"ipynb","base-format":"ipynb"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"png","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"ipynb","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"default-image-extension":"png","to":"ipynb","output-file":"2023-08-26-ct_pp_hw.ipynb"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"title-block-banner":true,"comments":{"utterances":{"repo":"seoyeonc/md"}},"title":"**[Coding Test]**Python Programming HW review","author":"SEOYEON CHOI","date":"2023-08-26"}}},"projectFormats":["html"]}